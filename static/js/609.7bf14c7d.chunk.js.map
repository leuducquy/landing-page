{"version":3,"file":"static/js/609.7bf14c7d.chunk.js","mappings":"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","sources":["common/utils/useForm.tsx","common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx","common/TextArea/index.tsx","components/ContactForm/styles.ts","components/ContactForm/index.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.keys(values).length === 3) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues(\"\");\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.message) {\r\n    errors.message = \"Message is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nconst Block = ({ title, content }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{title}</h6>\r\n      <TextWrapper>\r\n        <Content>{content}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{name}</Label>\r\n    <StyledInput\r\n      placeholder={placeholder}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default Input;\r\n","import { withTranslation } from \"react-i18next\";\r\nimport { StyledTextArea, StyledContainer, Label } from \"./styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst TextArea = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <StyledContainer>\r\n    <Label htmlFor={name}>{name}</Label>\r\n    <StyledTextArea\r\n      placeholder={placeholder}\r\n      id={name}\r\n      name={name}\r\n      onChange={onChange}\r\n    />\r\n  </StyledContainer>\r\n);\r\n\r\nexport default TextArea;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")<any>`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport { ContactProps, ValidationTypeProps } from \"./types\";\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport { Button } from \"../../common/Button\";\r\nimport Block from \"../Block\";\r\nimport Input from \"../../common/Input\";\r\nimport TextArea from \"../../common/TextArea\";\r\nimport { ContactContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\r\n\r\nconst Contact = ({ title, content, id, t }: ContactProps) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    validate\r\n  ) as any;\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type];\r\n    return (\r\n      <Zoom direction=\"left\">\r\n        <Span erros={errors[type]}>{ErrorMessage}</Span>\r\n      </Zoom>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContactContainer id={id}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col lg={12} md={11} sm={24} xs={24}>\r\n          <Slide direction=\"left\">\r\n            <Block title={title} content={content} />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Slide direction=\"right\">\r\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Your Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <TextArea\r\n                  placeholder=\"Your Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <ButtonContainer>\r\n                <Button name=\"submit\">{\"Submit\"}</Button>\r\n              </ButtonContainer>\r\n            </FormGroup>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n"],"names":["useForm","validate","_useState","useState","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","shouldSubmit","setShouldSubmit","useEffect","Object","keys","length","notification","message","description","handleChange","event","persist","_objectSpread","_defineProperty","target","name","value","handleSubmit","preventDefault","axios","then","email","test","Content","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","TextWrapper","_templateObject3","_ref","title","content","_jsxs","children","_jsx","StyledInput","StyledContainer","StyledTextArea","Label","placeholder","onChange","htmlFor","id","t","ContactContainer","FormGroup","Span","ButtonContainer","_templateObject4","withTranslation","_ref2","ValidationType","_ref3","type","ErrorMessage","Zoom","direction","erros","Row","justify","align","Col","lg","md","sm","xs","Slide","Block","autoComplete","onSubmit","span","Input","TextArea","Button"],"sourceRoot":""}